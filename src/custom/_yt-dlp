#compdef yt-dlp

# zsh completions for 'yt-dlp'
# automatically generated with http://github.com/RobSis/zsh-completion-generator
local arguments

arguments=(
  {-h,--help}'[print this help text and exit]'
  '--version[print program version and exit]'
  {-U,--update}'[update this program to latest version. Make]'
  {-i,--ignore-errors}'[ignore download and postprocessing errors.]'
  '--no-abort-on-error[continue with next video on download]'
  '--abort-on-error[abort downloading of further videos if an]'
  '--dump-user-agent[display the current user-agent and exit]'
  '--list-extractors[list all supported extractors and exit]'
  '--extractor-descriptions[output descriptions of all supported]'
  '--force-generic-extractor[force extraction to use the generic]'
  '--default-search[use this prefix for unqualified URLs. For]'
  '--ignore-config[dont load any more configuration files]'
  '--no-config-locations[do not load any custom configuration files]'
  '--config-locations[in the current]'
  '--config-locations[location of the main configuration file;]'
  '--flat-playlist[do not extract the videos of a playlist]'
  '--no-flat-playlist[extract the videos of a playlist]'
  '--live-from-start[download livestreams from the start.]'
  '--no-live-from-start[download livestreams from the current time]'
  '--wait-for-video[wait for scheduled streams to become]'
  '--no-wait-for-video[do not wait for scheduled streams (default)]'
  '--mark-watched[mark videos watched (even with --simulate).]'
  '--no-mark-watched[do not mark videos watched (default)]'
  '--no-colors[do not emit color codes in output]'
  '--compat-options[options that can help keep compatibility]'
  '--proxy[use the specified HTTP/HTTPS/SOCKS proxy.]'
  '--socket-timeout[time to wait before giving up, in seconds]'
  '--source-address[client-side IP address to bind to]'
  {-4,--force-ipv4}'[make all connections via IPv4]'
  {-6,--force-ipv6}'[make all connections via IPv6]'
  '--geo-verification-proxy[use this proxy to verify the IP address for]'
  '--geo-bypass[bypass geographic restriction via faking]'
  '--no-geo-bypass[do not bypass geographic restriction via]'
  '--geo-bypass-country[force bypass geographic restriction with]'
  '--geo-bypass-ip-block[force bypass geographic restriction with]'
  '--playlist-start[playlist video to start at (default is 1)]'
  '--playlist-end[playlist video to end at (default is last)]'
  '--playlist-items[playlist video items to download. Specify]'
  '--min-filesize[do not download any videos smaller than]'
  '--max-filesize[do not download any videos larger than SIZE]'
  '--date[download only videos uploaded on this date.]'
  '--datebefore[download only videos uploaded on or before]'
  '--dateafter[download only videos uploaded on or after]'
  '--match-filter[generic video filter. Any field (see]'
  '--match-filter[!is_live & like_count>?100]'
  '--no-match-filter[do not use generic video filter (default)]'
  '--no-playlist[download only the video, if the URL refers]'
  '--yes-playlist[download the playlist, if the URL refers to]'
  '--age-limit[download only videos suitable for the given]'
  '--download-archive[download only videos not listed in the]'
  '--no-download-archive[do not use archive file (default)]'
  '--max-downloads[abort after downloading NUMBER files]'
  '--break-on-existing[stop the download process when encountering]'
  '--break-on-reject[stop the download process when encountering]'
  '--break-per-input[make --break-on-existing and --break-on-]'
  {--no-break-per-input,--break-on-existing,--break-on-reject}'[terminates the entire download queue]'
  '--skip-playlist-after-errors[number of allowed failures until the rest]'
  {-N,--concurrent-fragments}'[number of fragments of a dash/hlsnative]'
  {-r,--limit-rate}'[maximum download rate in bytes per second]'
  '--throttled-rate[minimum download rate in bytes per second]'
  {-R,--retries}'[number of retries (default is 10), or]'
  '--file-access-retries[number of times to retry on file access]'
  '--fragment-retries[number of retries for a fragment (default]'
  '--skip-unavailable-fragments[skip unavailable fragments for DASH]'
  '--abort-on-unavailable-fragment[abort downloading if a fragment is]'
  '--keep-fragments[keep downloaded fragments on disk after]'
  '--no-keep-fragments[delete downloaded fragments after]'
  '--buffer-size[size of download buffer (e.g. 1024 or 16K)]'
  '--resize-buffer[the buffer size is automatically resized]'
  '--no-resize-buffer[do not automatically adjust the buffer size]'
  '--http-chunk-size[size of a chunk for chunk-based HTTP]'
  '--playlist-reverse[download playlist videos in reverse order]'
  '--no-playlist-reverse[download playlist videos in default order]'
  '--playlist-random[download playlist videos in random order]'
  '--xattr-set-filesize[set file xattribute ytdl.filesize with]'
  '--hls-use-mpegts[use the mpegts container for HLS videos;]'
  '--no-hls-use-mpegts[do not use the mpegts container for HLS]'
  '--downloader[name or path of the external downloader to]'
  '--external-downloader[)]'
  '--downloader-args[give these arguments to the external]'
  '--external-downloader-args[)]'
  {-a,--batch-file}'[file containing URLs to download ("-" for]'
  '--no-batch-file[do not read URLs from batch file (default)]'
  {-P,--paths}'[the paths where the files should be]'
  '--output[an absolute path]'
  {-o,--output}'[output filename template; see "OUTPUT]'
  '--output-na-placeholder[placeholder value for unavailable meta]'
  '--restrict-filenames[restrict filenames to only ASCII]'
  '--no-restrict-filenames[allow Unicode characters, "&" and spaces in]'
  '--windows-filenames[force filenames to be Windows-compatible]'
  '--no-windows-filenames[make filenames Windows-compatible only if]'
  '--trim-filenames[limit the filename length (excluding]'
  {-w,--no-overwrites}'[do not overwrite any files]'
  '--force-overwrites[overwrite all video and metadata files.]'
  '--no-force-overwrites[do not overwrite the video, but overwrite]'
  {-c,--continue}'[resume partially downloaded files/fragments]'
  '--no-continue[do not resume partially downloaded]'
  '--part[use .part files instead of writing directly]'
  '--no-part[do not use .part files - write directly]'
  '--mtime[use the Last-modified header to set the]'
  '--no-mtime[do not use the Last-modified header to set]'
  '--write-description[write video description to a .description]'
  '--no-write-description[do not write video description (default)]'
  '--write-info-json[write video metadata to a .info.json file]'
  '--no-write-info-json[do not write video metadata (default)]'
  '--write-playlist-metafiles[write playlist metadata in addition to the]'
  '--no-write-playlist-metafiles[do not write playlist metadata when using]'
  {--write-info-json,--write-description}'[.]'
  '--clean-infojson[remove some private fields such as]'
  '--no-clean-infojson[write all fields to the infojson]'
  '--write-comments[retrieve video comments to be placed in the]'
  '--no-write-comments[do not retrieve video comments unless the]'
  '--no-get-comments[)]'
  '--load-info-json[JSON file containing the video information]'
  '--cookies[netscape formatted file to read cookies]'
  '--no-cookies[do not read/dump cookies from/to file]'
  '--cookies-from-browser[+KEYRING\]\[:PROFILE\]]'
  '--no-cookies-from-browser[do not load cookies from browser (default)]'
  '--cache-dir[location in the filesystem where youtube-dl]'
  '--no-cache-dir[disable filesystem caching]'
  '--rm-cache-dir[delete all filesystem cache files]'
  '--write-thumbnail[write thumbnail image to disk]'
  '--no-write-thumbnail[do not write thumbnail image to disk]'
  '--write-all-thumbnails[write all thumbnail image formats to disk]'
  '--list-thumbnails[list available thumbnails of each video.]'
  '--write-link[write an internet shortcut file, depending]'
  '--write-url-link[write a .url Windows internet shortcut. The]'
  '--write-webloc-link[write a .webloc macOS internet shortcut]'
  '--write-desktop-link[write a .desktop Linux internet shortcut]'
  {-q,--quiet}'[activate quiet mode. If used with]'
  '--verbose[print the log to stderr]'
  '--no-warnings[ignore warnings]'
  {-s,--simulate}'[do not download the video and do not write]'
  '--no-simulate[download the video even if printing/listing]'
  '--ignore-no-formats-error[ignore "No video formats" error. Useful for]'
  '--no-ignore-no-formats-error[throw error when no downloadable video]'
  '--skip-download[do not download the video but write all]'
  {-O,--print}'[field name or output template to print to]'
  '--use-postprocessor[and "video" (default).]'
  '--no-simulate[used). This option can be]'
  '--print-to-file[FILE]'
  {-j,--dump-json}'[quiet, but print JSON information for each]'
  {-J,--dump-single-json}'[quiet, but print JSON information for each]'
  '--no-simulate[used. If the URL refers to]'
  '--force-write-archive[force download archive entries to be]'
  '-s[another simulation option is used]'
  '--newline[output progress bar as new lines]'
  '--no-progress[do not print progress bar]'
  '--progress[show progress bar, even if in quiet mode]'
  '--console-title[display progress in console titlebar]'
  '--progress-template[template for progress outputs, optionally]'
  {--console-title,--progress-template}'["download-]'
  {-v,--verbose}'[print various debugging information]'
  '--dump-pages[print downloaded pages encoded using base64]'
  '--write-pages[write downloaded intermediary pages to]'
  '--print-traffic[display sent and read HTTP traffic]'
  '--encoding[force the specified encoding (experimental)]'
  '--legacy-server-connect[explicitly allow HTTPS connection to]'
  '--no-check-certificates[suppress HTTPS certificate validation]'
  '--prefer-insecure[use an unencrypted connection to retrieve]'
  '--user-agent[specify a custom user agent]'
  '--referer[specify a custom referer, use if the video]'
  '--add-header[specify a custom HTTP header and its value]'
  '--bidi-workaround[work around terminals that lack]'
  '--sleep-requests[number of seconds to sleep between requests]'
  '--sleep-interval[number of seconds to sleep before each]'
  '--max-sleep-interval[maximum number of seconds to sleep. Can]'
  '--sleep-subtitles[number of seconds to sleep before each]'
  {-f,--format}'[video format code, see "FORMAT SELECTION"]'
  {-S,--format-sort}'[sort the formats by the fields given, see]'
  '--format-sort-force[force user specified sort order to have]'
  '--no-format-sort-force[some fields have precedence over the user]'
  '--video-multistreams[allow multiple video streams to be merged]'
  '--no-video-multistreams[only one video stream is downloaded for]'
  '--audio-multistreams[allow multiple audio streams to be merged]'
  '--no-audio-multistreams[only one audio stream is downloaded for]'
  '--prefer-free-formats[prefer video formats with free containers]'
  '--no-prefer-free-formats[dont give any special preference to free]'
  '--check-formats[check that the selected formats are]'
  '--check-all-formats[check all formats for whether they are]'
  '--no-check-formats[do not check that the formats are actually]'
  {-F,--list-formats}'[list available formats of each video.]'
  '--merge-output-format[if a merge is required (e.g.]'
  '--write-subs[write subtitle file]'
  '--no-write-subs[do not write subtitle file (default)]'
  '--write-auto-subs[write automatically generated subtitle file]'
  '--no-write-auto-subs[do not write auto-generated subtitles]'
  '--list-subs[list available subtitles of each video.]'
  '--sub-format[subtitle format, accepts formats]'
  '--sub-langs[languages of the subtitles to download (can]'
  {-u,--username}'[login with this account ID]'
  {-p,--password}'[account password. If this option is left]'
  {-2,--twofactor}'[two-factor authentication code]'
  {-n,--netrc}'[use .netrc authentication data]'
  '--netrc-location[location of .netrc authentication data;]'
  '--video-password[video password (vimeo, youku)]'
  '--ap-mso[adobe Pass multiple-system operator (TV]'
  '--ap-username[multiple-system operator account login]'
  '--ap-password[multiple-system operator account password.]'
  '--ap-list-mso[list all supported multiple-system]'
  {-x,--extract-audio}'[convert video files to audio-only files]'
  '--audio-format[specify audio format to convert the audio]'
  '--audio-quality[specify ffmpeg audio quality, insert a]'
  '--remux-video[remux the video into another container if]'
  '--recode-video[re-encode the video into another format if]'
  '--postprocessor-args[give these arguments to the postprocessors.]'
  '--ppa[+ffmpeg_i1:-v quiet". You can]'
  {-k,--keep-video}'[keep the intermediate video file on disk]'
  '--no-keep-video[delete the intermediate video file after]'
  '--post-overwrites[overwrite post-processed files (default)]'
  '--no-post-overwrites[do not overwrite post-processed files]'
  '--embed-subs[embed subtitles in the video (only for mp4]'
  '--no-embed-subs[do not embed subtitles (default)]'
  '--embed-thumbnail[embed thumbnail in the video as cover art]'
  '--no-embed-thumbnail[do not embed thumbnail (default)]'
  '--embed-metadata[embed metadata to the video file. Also]'
  '--no-embed-chapters[/--no-embed-info-json]'
  '--no-embed-metadata[do not add metadata to file (default)]'
  '--embed-chapters[add chapter markers to the video file]'
  '--no-embed-chapters[do not add chapter markers (default)]'
  '--embed-info-json[embed the infojson as an attachment to]'
  '--no-embed-info-json[do not embed the infojson as an attachment]'
  '--parse-metadata[parse additional metadata like title/artist]'
  '--replace-in-metadata[REGEX REPLACE]'
  '--xattrs[write metadata to the video files xattrs]'
  '--concat-playlist[concatenate videos in a playlist. One of]'
  '--fixup[automatically correct known faults of the]'
  '--ffmpeg-location[location of the ffmpeg binary; either the]'
  '--exec[execute a command, optionally prefixed with]'
  '--use-postprocessor[. Same syntax as the]'
  '--no-exec[remove any previously defined --exec]'
  '--convert-subs[convert the subtitles to another format]'
  '--convert-thumbnails[convert the thumbnails to another format]'
  '--split-chapters[split video into multiple files based on]'
  '--no-split-chapters[do not split video based on chapters]'
  '--remove-chapters[remove chapters whose title matches the]'
  '--remove-chapters[". This option can]'
  '--no-remove-chapters[do not remove any chapters from the file]'
  '--force-keyframes-at-cuts[force keyframes around the chapters before]'
  '--no-force-keyframes-at-cuts[do not force keyframes around the chapters]'
  '--use-postprocessor[the (case sensitive) name of plugin]'
  '--sponsorblock-mark[sponsorBlock categories to create chapters]'
  '--sponsorblock-remove[sponsorBlock categories to be removed from]'
  '--sponsorblock-chapter-title[the title template for SponsorBlock]'
  '--no-sponsorblock[disable both --sponsorblock-mark and]'
  '--sponsorblock-remove[]'
  '--sponsorblock-api[sponsorBlock API location, defaults to]'
  '--extractor-retries[number of retries for known extractor]'
  '--allow-dynamic-mpd[process dynamic DASH manifests (default)]'
  '--ignore-dynamic-mpd[do not process dynamic DASH manifests]'
  '--hls-split-discontinuity[split HLS playlists to different formats at]'
  '--no-hls-split-discontinuity[do not split HLS playlists to different]'
  '--extractor-args[pass these arguments to the extractor. See]'
  '*:filename:_files'
)

_arguments -s $arguments
